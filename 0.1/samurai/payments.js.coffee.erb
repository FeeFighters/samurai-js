# Samurai Payment Forms Module
# ------------------------
$ = jQuery

# Module for performing ajax payment transactions
@module "Samurai", ->
  @Payments = do ->
    rpc = null  # our easyXDM socket
    transparentRedirectUrl = <%= Rails.env.production? ? "'https://api.samurai.feefighters.com/v1/payment_methods'" :
      %{if Samurai.config.mock then "/uber_gateway_mock/v1/payment_methods" else "https://api.samurai.feefighters.com/v1/payment_methods"} %> # API endpoint

    init = ->
      setupRpc() if $('form[data-samurai-ajax]').length or Samurai.shouldForceLoad('payments')  # initialize the easyXDM framework
      attachPaymentFormHandlers()  # attach event handlers to any payment forms

      # Expose the payment method on the Samurai object, for convenience
      Samurai.payment = payment

    # Setup the easyXDM socket
    setupRpc = ->
      remote = <%= Rails.env.production? ? "'https://api.samurai.feefighters.com/provider.html'" :
      %{if Samurai.config.mock then "/provider.html" else "https://api.samurai.feefighters.com/provider.html"} %>
      rpc = new easyXDM.Rpc {
        remote: remote
      }, { remote: { request: {} }}

    # This is the main payment api call
    # It will generate a `payment_method_token` based on the supplied credit card data,
    # and pass it to the callback function
    payment = (data, callback) ->
      rpc.request {
        url: transparentRedirectUrl
        method: "POST"
        data: prepPaymentData data
        dataType: 'json'
        headers:
          'Accept': 'application/json'
      }, (response) ->
        json = jQuery.parseJSON response.data
        Samurai.log 'payment response'
        Samurai.log json
        callback(json)

    # Add the extra data fields that we need to add, ie: `redirect_url`
    prepPaymentData = (data) ->
      data.redirect_url = 'http://location/'
      data.merchant_key = Samurai.config.merchant_key
      data.sandbox = Samurai.config.sandbox
      data.ignore_merchant_key = true if Samurai.config.mock?
      data

    # Attach to any forms with `data-samurai-ajax`, and make them ajax-aware
    attachPaymentFormHandlers = ->
      samurai = this
      $('form[data-samurai-ajax]').each ->
        $(this).submit (event) ->   # on submit,
          event.preventDefault();   # stop event propagation
          $(this).trigger('samurai.loading').addClass('loading')              # trigger the `samurai.loading` event
          $(this).children('.loading').show()                                 # display the `.loading` spinner
          $(this).children('button[type="submit"]').attr('disabled', true)    # change the button style
          payment $(this).formParams(), (data) =>       # call `Samurai.payment()` to submit the credit card data
            $(this).trigger('samurai.payment', data)    # callback function, trigger the `samurai.payment` event on the form
          false
        $(this).bind 'samurai.completed', (event, data) ->    # bind to the `samurai.completed` event,
          $(this).children('button[type="submit"]').hide()    # hide the button (only let them purchase once)
          $(this).removeClass('loading').addClass('complete') # set the `.loading` class on the form
          $(this).children('.loading').hide()   # hide the `.loading` spinner
          $(this).children('.results').show()   # show the `.results` container

    # Export public API
    {init, payment}


