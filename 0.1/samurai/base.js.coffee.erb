<%
  version ||= 0.1
  root_url = if Rails.env.development?
    'http://127.0.0.1:3000'
  elsif Rails.env.test?
    ''
  elsif Rails.env.staging?
    'https://samurai-staging.feefighters.com'
  else
    'https://samurai.feefighters.com'
  end
%>
# Samurai Base
# ------------------------

# helper so we can use modules to break functionality into separate files
# See:  https://github.com/jashkenas/coffee-script/wiki/Easy-modules-with-CoffeeScript
@module = (names, fn) ->
  names = names.split '.' if typeof names is 'string'
  space = @[names.shift()] ||= {}
  space.module ||= @module
  if names.length
    space.module names, fn
  else
    fn.call space


# Setup the core Samurai object
window.Samurai =
  config: {}

  # Initializes each of the Samurai modules
  init: (@config={})->
    @config.debug = true if window.location.href.match(/samurai-js-debug=1/)
    @config.forceLoad = [] unless @config.forceLoad?
    @loadSamuraiCss() unless @config.withoutCss?
    Samurai.log 'Loaded. Initializing, with config:'
    Samurai.log @config

    Samurai.jQuery =>
      # Initialize Samurai modules!
      Samurai.PaymentForms.init()
      Samurai.CardPreview.init()
      Samurai.ExpirationDates.init()
      Samurai.Payments.init()

      # Override the .ready() command, since we're ready, we want to immediate trigger the callback
      @ready = (callback) -> callback()

      # Trigger the ready() callbacks
      for callback in @readyCallbacks
        callback()
      true

  # Load the Samurai CSS
  loadSamuraiCss: ->
    # Build a link tag and insert it into the head
    head = document.getElementsByTagName('head')[0]
    link = document.createElement('link')
    link.type = 'text/css'
    link.media = 'screen'
    link.rel = 'stylesheet'
    link.href = '<%= root_url + asset_path("api/#{version}/samurai.css") %>'
    head.appendChild(link)

  # Simple logging utility method, only outputs if `Samurai.config.debug`
  # Accepts either a String or an Object, dumps to console
  log: (data...) ->
    return unless Samurai.config.debug
    return unless console?

    # IE has a buggy console object, where every method is an 'object', instead of a 'function',
    # so coffeescript splats fail miserably when .apply is called on the console.log method
    # in the compiled code.
    buggyConsole = !!(typeof console.log is 'object')
    log = (level, d...) ->
      if buggyConsole
        console[level](d)
      else
        console[level](d...)

    if typeof data[0] is "string"
      data[0] = (new Date()).toISOString()+' Samurai: '+data[0]
      log 'log', data...
    else
      if "debug" of console
        log 'debug', data...
      else
        log 'info', data...

  # array of callback functions to be executed when Samurai is loaded
  readyCallbacks: []

  # consumers of Samurai.js can use `Samurai.ready()` to delay code that relies on Samurai being fully initialized
  # eg:
  #
  # ```javascript
  # Samurai.ready(function() {
  #   alert(Samurai.Utilities.cardBrandFromNumber('4111'));
  # });
  # ```
  ready: (callback) ->
    @readyCallbacks.push callback

